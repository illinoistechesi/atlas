{"version":3,"sources":["create.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","atlas","Atlas","init","then","done","mapOptions","zoom","center","google","maps","LatLng","styles","removeThemeLabels","MAP_STYLES","mapElement","document","getElementById","map","Map","window","mapRef","setMap","mapThemeTag","localStorage","getItem","mapThemeStyle","theme","JSON","parse","changeMapStyle","event","addListener","isShiftClick","coord","latLng","addDefaultMarker","lat","lng","vex","dialog","prompt","message","callback","value","loaded","loadMarkers","forEach","name","first","markers","setCenter","data","alert","MAP_TAG","importCoordinates","tag","setItem","shortcutsList","addEventListener","displayList","createElement","innerHTML","unsafeMessage","outerHTML","setHotKey","confirm","yes","markersToString","getMapStyleByURL","style","json","catch","err"],"mappings":"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","file":"../create.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar atlas = Atlas();\n\natlas.init().then(function (done) {\n\n    var mapOptions = {\n        zoom: 15,\n        center: new google.maps.LatLng(41.259716, -95.960588),\n        styles: atlas.removeThemeLabels(MAP_STYLES)\n    };\n\n    var mapElement = document.getElementById('map');\n\n    var map = new google.maps.Map(mapElement, mapOptions);\n    window.mapRef = map;\n    atlas.setMap(map);\n\n    var mapThemeTag = localStorage.getItem('map-theme-tag');\n    var mapThemeStyle = localStorage.getItem('map-theme-style');\n    if (mapThemeTag && mapThemeStyle) {\n        var theme = JSON.parse(mapThemeStyle);\n        atlas.changeMapStyle(map, mapThemeTag, theme);\n    }\n\n    google.maps.event.addListener(map, 'click', function (e) {\n        if (atlas.isShiftClick()) {\n            var coord = e.latLng;\n            var entry = atlas.addDefaultMarker({\n                map: map,\n                coord: {\n                    lat: coord.lat(),\n                    lng: coord.lng()\n                }\n            });\n            /*atlas.updateName(atlas.markers.length - 1).then(added => {\n                if(!added){\n                    atlas.removeMarker(atlas.markers.length - 1);\n                }\n            });*/\n        }\n    });\n\n    vex.dialog.prompt({\n        message: 'Enter a key to create or load a map:',\n        callback: function callback(value) {\n            if (value) {\n                var loaded = atlas.loadMarkers(value);\n                if (loaded) {\n                    loaded.forEach(function (coord) {\n                        coord.map = map;\n                        atlas.addDefaultMarker({\n                            map: map,\n                            coord: coord,\n                            name: coord.name\n                        });\n                        var first = atlas.markers[0];\n                        if (first) {\n                            map.setCenter({\n                                lat: first.data.lat,\n                                lng: first.data.lng\n                            });\n                        }\n                    });\n                    vex.dialog.alert('Loaded existing map: ' + value);\n                } else {\n                    vex.dialog.alert('Created new map: ' + value);\n                }\n                window.MAP_TAG = value;\n            }\n        }\n    });\n\n    var importCoordinates = function importCoordinates(tag) {\n        vex.dialog.prompt({\n            message: 'Import your coordinates:',\n            callback: function callback(value) {\n                localStorage.setItem(tag, value);\n            }\n        });\n    };\n\n    var shortcutsList = document.getElementById('shortcuts-list');\n    document.getElementById('shortcuts').addEventListener('click', function (e) {\n        var displayList = document.createElement('div');\n        displayList.innerHTML = shortcutsList.innerHTML;\n        vex.dialog.alert({\n            unsafeMessage: displayList.outerHTML\n        });\n    });\n\n    atlas.setHotKey('i', function (e) {\n        vex.dialog.prompt({\n            message: 'Enter a key for this map:',\n            callback: function callback(tag) {\n                var existing = localStorage.getItem(tag);\n                if (existing) {\n                    vex.dialog.confirm({\n                        message: 'This will overwrite an existing map, are you sure?',\n                        callback: function callback(yes) {\n                            if (yes) {\n                                importCoordinates(tag);\n                            }\n                        }\n                    });\n                } else {\n                    importCoordinates(tag);\n                }\n            }\n        });\n    });\n\n    atlas.setHotKey('e', function (e) {\n        vex.dialog.prompt({\n            message: 'Exported coordinates:',\n            value: atlas.markersToString(atlas.markers),\n            callback: function callback(value) {}\n        });\n    });\n\n    atlas.setHotKey('t', function (e) {\n        vex.dialog.prompt({\n            message: 'Enter map theme URL:',\n            callback: function callback(value) {\n                atlas.getMapStyleByURL(value).then(function (style) {\n                    localStorage.setItem('map-theme-tag', style.name);\n                    localStorage.setItem('map-theme-style', style.json);\n                    var tag = style.name;\n                    var theme = JSON.parse(style.json);\n                    atlas.changeMapStyle(map, tag, theme);\n                    vex.dialog.alert('Changed map theme to: ' + tag);\n                }).catch(function (err) {\n                    vex.dialog.alert('Error: ' + err);\n                });\n            }\n        });\n    });\n});\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}